name: CICD

on:
  push:
    branches:
      - master
      - dev
      
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
  
    name: Build and Test
    runs-on: macOS-latest
    
    strategy:
      max-parallel: 1
      matrix:
        # List all schemes to build
        scheme: [default]
        # Specify the platform & devices
        platform: [iOS Simulator]
        device: [iPhone 11 Pro]
    
    steps:
    
    - uses: actions/checkout@v1
    
      # Runs if matrix.scheme is set to default
      # Finds the first listed scheme
    - name: Set Default Scheme
      if: matrix.scheme == 'default'
      run: |
        scheme_list=$(xcodebuild -list -json | tr -d "\n")
        default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
        echo $default | cat >default
        echo Using default scheme: $default
        
    - name: Destinations

      run: instruments -s devices
    
    - name: Build
      env:
        scheme: ${{ matrix.scheme }}
        platform: ${{ matrix.platform }}
        device: ${{ matrix.device }}
      run: |
        if [ $scheme = default ]; then scheme=$(cat default); fi
        xcodebuild build-for-testing -scheme $scheme -destination "platform=$platform,name=$device"
        
    - name: Test
      env:
        scheme: ${{ matrix.scheme }}
        platform: ${{ matrix.platform }}
        device: ${{ matrix.device }}
      run: |
        if [ $scheme = default ]; then scheme=$(cat default); fi
        set -o pipefail && xcodebuild test-without-building -scheme $scheme -testPlan $scheme -destination "platform=$platform,name=$device" | xcpretty --color --report html --output TestReports/report.html
    - name: Test Reports
      if: failure()
      uses: actions/upload-artifact@v1
      with:
          name: testReports
          path: TestReports
